# Aliases

	alias s=sails
	alias sl="sails lift"
	alias ni="npm install"
	alias nv="node --version"	
	alias g=grunt
	alias nm='d node_modules'
	alias snl='sudo npm link'	

	function n() {
		if [ $1 ] ; then
			# ARGUMENT(S) GIVEN	
			if [[ "$1" != *.js* ]] ; then
				FILENAME="$1.js"
			else
				FILENAME=$1
			fi
			shift
		else
			# NO ARGUMENTS, RUN APP.JS
			FILENAME="app.js"
		fi
		
		echo ""	
		echo -en "\033[1m"
		
		node $FILENAME ${@}
		
		echo -en "\033[0m"
		echo ""		
		
	}	
	
	function nu() {
		COMMAND="nvm use v"
		COMMANDVER=$COMMAND$1
		$COMMANDVER
	}		

# NVM setup

	[[ -s ~/.nvm/nvm.sh ]] && . ~/.nvm/nvm.sh # This loads NVM	
	[[ -s ~/.nvm/bash_completion ]] && . ~/.nvm/bash_completion # This loads NVM

# NPM completion

	if npm -v >/dev/null 2>&1; then
	. <(npm completion)
	fi
	
	###-begin-npm-completion-###
	#
	# npm command completion script
	#
	# Installation: npm completion >> ~/.bashrc  (or ~/.zshrc)
	# Or, maybe: npm completion > /usr/local/etc/bash_completion.d/npm
	#
	
	COMP_WORDBREAKS=${COMP_WORDBREAKS/=/}
	COMP_WORDBREAKS=${COMP_WORDBREAKS/@/}
	export COMP_WORDBREAKS
	
	if type complete &>/dev/null; then
	_npm_completion () {
	local si="$IFS"
	IFS=$'\n' COMPREPLY=($(COMP_CWORD="$COMP_CWORD" \
	                       COMP_LINE="$COMP_LINE" \
	                       COMP_POINT="$COMP_POINT" \
	                       npm completion -- "${COMP_WORDS[@]}" \
	                       2>/dev/null)) || return $?
	IFS="$si"
	}
	complete -F _npm_completion npm
	elif type compdef &>/dev/null; then
	_npm_completion() {
	si=$IFS
	compadd -- $(COMP_CWORD=$((CURRENT-1)) \
	             COMP_LINE=$BUFFER \
	             COMP_POINT=0 \
	             npm completion -- "${words[@]}" \
	             2>/dev/null)
	IFS=$si
	}
	compdef _npm_completion npm
	elif type compctl &>/dev/null; then
	_npm_completion () {
	local cword line point words si
	read -Ac words
	read -cn cword
	let cword-=1
	read -l line
	read -ln point
	si="$IFS"
	IFS=$'\n' reply=($(COMP_CWORD="$cword" \
	                   COMP_LINE="$line" \
	                   COMP_POINT="$point" \
	                   npm completion -- "${words[@]}" \
	                   2>/dev/null)) || return $?
	IFS="$si"
	}
	compctl -K _npm_completion npm
	fi
	###-end-npm-completion-###
