# Aliases

	alias ni="npm install --save"
	alias nid="npm install --save-dev"
	alias nr="npm run"
	alias n=nr
	alias nrs="npm start"
	alias ns="npm run launch"
	alias nrd="npm run dev"
	alias nd=nrd
	alias nrdb="npm run debug"
	alias debug=nrdb
	alias nrp="npm run prod"
	alias prod=nrp
	alias nrb="npm run build"
	alias nb=nrb
	alias nrw="npm run watch"
	alias nrr="npm run restart"
	alias nw=nrw
	alias nrc="npm run clean"
	alias nc=nrc
	alias nrl="npm run --silent lint"
	alias nl=nrl
	alias nrlf="npm run lint:fix"
	alias nrt="npm run test"
	alias nt=nrt
	alias ntp="nr test:prod"
	alias nte="nr test:env"
	alias nrv="npm run validate"
	alias nv=nrv
	alias nver="node --version"
	alias nu="npm update"
	alias op="o package.json"
	alias cc="npm run cover:check"

	alias bi="bower install"
	alias bu="bower update"

	alias ngs='ng serve'
	alias ngb='ng build'
	alias ngg='ng generate'

	alias gr=grunt
	alias grs='grunt serve'
	alias snl='sudo npm link'
	alias nm='d node_modules'
	alias rnm='rm -Rf node_modules'
	alias np='npm publish ./'

	alias mo=mocha
	alias mog='mocha --grep'
	alias cc='conventional-changelog -p angular -i CHANGELOG.md -w'
	alias ccall='conventional-changelog -p angular -i CHANGELOG.md -w -r 0'
	alias rlog='rm *.log &>/dev/null; rm *.log.* &>/dev/null; rm node-report.* &>/dev/null;'
	alias rl=rlog

	alias vu='vagrant up'
	alias vh='vagrant halt'
	alias vd='vagrant destroy'
	alias vs='vagrant ssh'
	alias vp='vagrant provision'
	alias vbu='vagrant box update'

	function no() {
		echo ""
		echo -en "\033[1m"

		FILENAME=""

		if [ $1 ] ; then
			# ARGUMENT(S) GIVEN
			if [[ "$1" != *.js* ]] ; then
				FILENAME="$1.js"
			elif [[ "$1" == *--* ]] ; then
				FILENAME="app.js $1"
			else
				FILENAME=$1
			fi
			shift
		elif [ -f app.js ]; then
			# NO ARGUMENTS, RUN APP.JS
			FILENAME="app.js"
		elif [ -f index.js ]; then
			# NO ARGUMENTS, RUN INDEX.JS
			FILENAME="index.js"
		fi

		if [[ $1 = "debug" || $1 = "--debug" ]]; then
			node-debug $FILENAME ${@}
		elif [[ $FILENAME ]]; then
			node $FILENAME ${@}
		else
			echo "ERROR: script not found"
		fi

		echo -en "\033[0m"
		echo ""

	}

	function nvu() {
		COMMAND="nvm use v"
		COMMANDVER=$COMMAND$1
		$COMMANDVER
	}

# NVM setup

	[[ -s ~/.nvm/nvm.sh ]] && . ~/.nvm/nvm.sh # This loads NVM
	[[ -s ~/.nvm/bash_completion ]] && . ~/.nvm/bash_completion # This loads NVM
